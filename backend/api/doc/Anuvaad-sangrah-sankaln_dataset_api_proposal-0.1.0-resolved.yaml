---
openapi: 3.0.0
info:
  title: Sangrah/Sankaln API proposal
  description: An API documentation describing about dataset
  contact:
    name: KD
    email: kumar.deepak@tarento.com
  version: 0.1.0
servers:
- url: /api
paths:
  /v0/dataset/parallel-corpus/submit:
    post:
      tags:
      - dataset
      summary: to create parallel dataset entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParallelDataset'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
      security:
      - authToken: []
  /v0/dataset/monolingual-corpus/submit:
    post:
      tags:
      - dataset
      summary: to create monolingual dataset entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonolingualDataset'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
      security:
      - authToken: []
  /v0/dataset/asr-corpus/submit:
    post:
      tags:
      - dataset
      summary: to create asr dataset entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ASRDataset'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
      security:
      - authToken: []
  /v0/dataset/document-ocr-corpus/submit:
    post:
      tags:
      - dataset
      summary: to create document ocr dataset entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentOCRDataset'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
      security:
      - authToken: []
  /v0/dataset/reference-corpus/submit:
    post:
      tags:
      - dataset
      summary: to create parallel dataset entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceDatasetRequest'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
      security:
      - authToken: []
  /v0/dataset/corpus/statistics/search:
    post:
      tags:
      - dataset
      summary: to query available datasets, primarily used to display stats available to the user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSearchRequest'
        required: true
      responses:
        "200":
          description: On successful completion of the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HttpResponse'
        "400":
          description: On input errors causing a failure in the job.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
components:
  schemas:
    ParallelDataset:
      required:
      - collectionMethod
      - collectionSource
      - contributors
      - count
      - datasetId
      - domain
      - languagePairs
      - license
      - stage
      - submitter
      - validationSchema
      type: object
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset, will be auto-generated.
          format: uuidv4
        stage:
          type: string
          description: life cycle before it gets listed
          enum:
          - SUBMITTED
          - VALIDATED
          - APPROVED
        count:
          type: integer
          description: count of example present in the dataset, should be auto generated by the system
        description:
          maxLength: 100
          minLength: 15
          type: string
          description: brief about the dataset
        submitter:
          $ref: '#/components/schemas/OAuthIdentity'
        contributors:
          type: array
          description: list of contributors
          items:
            $ref: '#/components/schemas/Contributor'
        languagePairs:
          $ref: '#/components/schemas/LanguagePair'
        collectionSource:
          $ref: '#/components/schemas/Source'
        domain:
          $ref: '#/components/schemas/Domain'
        collectionMethod:
          $ref: '#/components/schemas/CollectionMethod'
        license:
          $ref: '#/components/schemas/License'
        targetValidated:
          $ref: '#/components/schemas/TargetTextValidated'
        alignmentMethod:
          $ref: '#/components/schemas/TextAlignmentMethod'
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
        submittedOn:
          type: string
          description: timestamp when dataset is submitted
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        validationSchema:
          $ref: '#/components/schemas/ParallelDatasetRowValidationSchema'
        hosting:
          $ref: '#/components/schemas/DatasetLocation'
    ParallelDatasetRowValidationSchema:
      required:
      - sourceText
      - targetText
      type: object
      properties:
        sourceText:
          type: string
          description: textual data in source language
        targetText:
          type: string
          description: textual data in target language
        validatedTargetText:
          type: string
          description: textual data after annotator has validate the target sentence
        alignmentScore:
          maximum: 1
          minimum: 0.5
          type: number
          description: algorithm score secured for the sentence pair
      description: the individual dataset record attribute should have same name as specified in the schema.
    MonolingualDataset:
      required:
      - collectionSource
      - contributors
      - count
      - datasetId
      - domain
      - language
      - stage
      - submitter
      - validationSchema
      type: object
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset, will be auto-generated.
          format: uuidv4
        stage:
          type: string
          description: life cycle before it gets listed
          enum:
          - SUBMITTED
          - VALIDATED
          - APPROVED
        count:
          type: integer
          description: count of example present in the dataset, should be auto generated by the system
        description:
          maxLength: 100
          minLength: 15
          type: string
          description: brief about the dataset
        submitter:
          $ref: '#/components/schemas/OAuthIdentity'
        contributors:
          type: array
          description: list of contributors
          items:
            $ref: '#/components/schemas/Contributor'
        language:
          $ref: '#/components/schemas/Language'
        collectionSource:
          $ref: '#/components/schemas/Source'
        domain:
          $ref: '#/components/schemas/Domain'
        collectionMethod:
          $ref: '#/components/schemas/CollectionMethod'
        license:
          $ref: '#/components/schemas/License'
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
        submittedOn:
          type: string
          description: timestamp when dataset is submitted
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        validationSchema:
          $ref: '#/components/schemas/MonolingualRowValidationSchema'
        hosting:
          $ref: '#/components/schemas/DatasetLocation'
    MonolingualRowValidationSchema:
      required:
      - text
      type: object
      properties:
        text:
          type: string
          description: textual data in source language
    ASRDataset:
      required:
      - bitsPerSample
      - channel
      - collectionSource
      - contributors
      - count
      - datasetId
      - domain
      - format
      - language
      - samplingRate
      - stage
      - submitter
      - validationSchema
      type: object
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset, will be auto-generated.
          format: uuidv4
        stage:
          type: string
          description: life cycle before it gets listed
          enum:
          - SUBMITTED
          - VALIDATED
          - APPROVED
        count:
          type: integer
          description: count of example present in the dataset, should be auto generated by the system
        description:
          maxLength: 100
          minLength: 15
          type: string
          description: brief about the dataset
        submitter:
          $ref: '#/components/schemas/OAuthIdentity'
        contributors:
          type: array
          description: list of contributors
          items:
            $ref: '#/components/schemas/Contributor'
        language:
          $ref: '#/components/schemas/Language'
        collectionSource:
          $ref: '#/components/schemas/Source'
        domain:
          $ref: '#/components/schemas/Domain'
        collectionMethod:
          $ref: '#/components/schemas/CollectionMethod'
        format:
          $ref: '#/components/schemas/AudioFormat'
        channel:
          $ref: '#/components/schemas/AudioChannel'
        samplingRate:
          $ref: '#/components/schemas/AudioSampleRate'
        bitsPerSample:
          $ref: '#/components/schemas/AudioBitsPerSample'
        license:
          $ref: '#/components/schemas/License'
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
        submittedOn:
          type: string
          description: timestamp when dataset is submitted
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        validationSchema:
          $ref: '#/components/schemas/ASRRowValidationSchema'
        hosting:
          $ref: '#/components/schemas/DatasetLocation'
    ASRRowValidationSchema:
      required:
      - filename
      - text
      type: object
      properties:
        filename:
          type: string
          description: filename of the audio file
        text:
          type: string
          description: textual output of the audio
      description: validation schema for the audio dataset
    DocumentOCRDataset:
      required:
      - collectionMethod
      - collectionSource
      - count
      - datasetId
      - dpi
      - format
      - imageDataType
      - language
      - ocrtype
      - stage
      type: object
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset, will be auto-generated.
          format: uuidv4
        stage:
          type: string
          description: life cycle before it gets listed
          enum:
          - SUBMITTED
          - VALIDATED
          - APPROVED
        count:
          type: integer
          description: count of example present in the dataset, should be auto generated by the system
        description:
          maxLength: 100
          minLength: 15
          type: string
          description: brief about the dataset
        submitter:
          $ref: '#/components/schemas/OAuthIdentity'
        contributors:
          type: array
          description: list of contributors
          items:
            $ref: '#/components/schemas/Contributor'
        collectionSource:
          $ref: '#/components/schemas/Source'
        collectionMethod:
          $ref: '#/components/schemas/CollectionMethod'
        license:
          $ref: '#/components/schemas/License'
        ocrtype:
          $ref: '#/components/schemas/DocumentOCRDatasetType'
        format:
          $ref: '#/components/schemas/ImageFormat'
        dpi:
          $ref: '#/components/schemas/ImageDPI'
        imageDataType:
          $ref: '#/components/schemas/ImageDataType'
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
        submittedOn:
          type: string
          description: timestamp when dataset is submitted
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        validationSchema:
          $ref: '#/components/schemas/DocumentOCRRowValidationSchema'
        hosting:
          $ref: '#/components/schemas/DatasetLocation'
    DocumentOCRRowValidationSchema:
      required:
      - boundingBox
      - filename
      type: object
      properties:
        filename:
          type: string
          description: filename of the image file
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        layoutClass:
          type: string
          enum:
          - PARAGRAPH
          - LINE
          - WORD
          - TABLE
          - TABLE_CELL
          - HEADER
          - FOOTER
          - SUB_SCRIPT
          - SUPER_SCRIPT
          - INLINE_IMAGE
          - BACKGROUND_IMAGE
          - WATERMARK
          - BULLETS
          - CAPTION
        groundTruth:
          type: string
          description: text data present in boundingbox forms ground truth
    ReferencedDataset:
      required:
      - contributedAttributes
      - contributors
      - count
      - datasetId
      - stage
      - submitter
      - validationSchema
      type: object
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset, will be auto-generated.
          format: uuidv4
        referenceId:
          type: string
          description: original dataset identifier from which referenced dataset is drived.
          format: uuidv4
        stage:
          type: string
          description: life cycle before it gets listed
          enum:
          - SUBMITTED
          - VALIDATED
          - APPROVED
        count:
          type: integer
          description: count of example present in the dataset, should be auto generated by the system
        description:
          maxLength: 100
          minLength: 15
          type: string
          description: brief about the dataset
        submitter:
          $ref: '#/components/schemas/OAuthIdentity'
        contributors:
          type: array
          description: list of contributors
          items:
            $ref: '#/components/schemas/Contributor'
        contributedAttributes:
          $ref: '#/components/schemas/ContributedAttributes'
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
        submittedOn:
          type: string
          description: timestamp when dataset is submitted
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        validationSchema:
          type: object
          description: schema against which validation will be conducted
          oneOf:
          - $ref: '#/components/schemas/ParallelDatasetRowValidationSchema'
          - $ref: '#/components/schemas/MonolingualRowValidationSchema'
          - $ref: '#/components/schemas/ASRRowValidationSchema'
          - $ref: '#/components/schemas/DocumentOCRRowValidationSchema'
        hosting:
          $ref: '#/components/schemas/DatasetLocation'
    ReferenceDatasetRequest:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: supported types of dataset
          enum:
          - parallel-corpus
          - monolingual-corpus
          - speech-corpus
          - document-ocr-corpus
        dataset:
          $ref: '#/components/schemas/ReferencedDataset'
    DatasetSubmitResponse:
      type: object
      properties:
        acknowlegmentId:
          type: string
          description: auto generated identifier to identify the internal representation
          format: uuidv4
        ticketId:
          type: string
          description: tracking identifier to get know the status of submission
      description: uploaded dataset goes through series of validation checks, automated or human-in-the-loop before it gets listed
    DatasetSearchRequest:
      required:
      - criterions
      - groupby
      - type
      type: object
      properties:
        type:
          type: string
          description: possible types of dataset
          enum:
          - parallel-corpus
          - monolingual-corpus
          - speech-corpus
          - ocr-corpus
        criterions:
          type: array
          description: comma separted system defined tags
          items:
            anyOf:
            - $ref: '#/components/schemas/LanguagePair'
            - $ref: '#/components/schemas/Domain'
            - $ref: '#/components/schemas/Language'
            - $ref: '#/components/schemas/Source'
            - $ref: '#/components/schemas/CollectionMethod'
        groupby:
          type: object
          description: groupby based upon the entity
          oneOf:
          - $ref: '#/components/schemas/Domain'
          - $ref: '#/components/schemas/LanguagePair'
          - $ref: '#/components/schemas/Language'
          - $ref: '#/components/schemas/Source'
          - $ref: '#/components/schemas/CollectionMethod'
        starttime:
          type: string
          description: start of timestamp
          format: datetime
        endtime:
          type: string
          description: end of timestamp
          format: datetime
    DatasetSearchResponse:
      required:
      - data
      type: object
      properties:
        data:
          type: array
          description: collection of value and label
          items:
            $ref: '#/components/schemas/DataPoint'
    ContributedAttributes:
      type: object
      properties:
        attributes:
          type: array
          description: attribute name as specified in the respective valdiation schema
          items:
            type: string
      description: the additional attributes submitted by the user under referenced dataset extension. Individual attribute name submitted by user should adhere to respective validation schema.
    DataPoint:
      required:
      - label
      - value
      type: object
      properties:
        label:
          type: string
          description: string value to show
        value:
          type: number
          description: numeric value of the data point
    Contributor:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: human name of the contributor
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: describing the contributor
    OAuthIdentity:
      type: object
      properties:
        identifier:
          type: string
          description: system identification for the contributor
          format: uuidv4
        oauthId:
          type: string
          description: popular social network identifier, typically identifier returned after auth
        provider:
          type: string
          description: user authentication provider
          enum:
          - SYSTEM_CUSTOM
          - GITHUB
          - FACEBOOK
          - INSTAGRAM
          - GOOGLE
          - YAHOO
    DatasetLocation:
      type: object
      properties:
        sampleFile:
          type: string
          description: sample dataset hosted url location.
          format: url
        completeFile:
          type: string
          description: full dataset hosted url location.
          format: url
        datasetFile:
          $ref: '#/components/schemas/DatasetFile'
    DatasetFile:
      type: object
      properties:
        filename:
          type: string
          description: uploaded file name
        identifier:
          type: string
          description: unique identifier of the file returned by the large file upload service. https://raw.githubusercontent.com/tus/tus-resumable-upload-protocol/master/OpenAPI/openapi3.yaml
          format: uuidv4
        type:
          type: string
          description: allowed file type
          enum:
          - ZIP
          - TAR_GZ
    Domain:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: array
          items:
            type: string
            enum:
            - general
            - news
            - education
            - legal
            - government-press-release
            - healthcare
            - movies
            - subtitles
            - sports
    TargetTextValidated:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          enum:
          - text-validated
    TextAlignmentMethod:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          enum:
          - LABSE
          - LASER
          - FAISS
    LanguagePair:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        sourceLanguage:
          $ref: '#/components/schemas/Language'
        targetLanguage:
          $ref: '#/components/schemas/Language'
    Language:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          enum:
          - en
          - hi
          - mr
          - ta
          - te
          - kn
          - gu
          - pa
          - bn
          - ml
          - as
          - brx
          - doi
          - ks
          - kok
          - mai
          - mni
          - ne
          - or
          - sd
          - si
          - ur
          - sat
          - lus
          - njz
          - pnr
          - kha
          - grt
          - sa
    License:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          enum:
          - cc-by-4.0
          - mit
          - gpl-3.0
          - bsd-3-clause
          - cc-by-nd-2.0
    Source:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: array
          description: user defined sources
          items:
            type: string
    CollectionMethod:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: array
          description: various collection methods user have used to create the dataset
          items:
            type: string
            enum:
            - web-scrapping
            - manual-human-translated
            - algorithm-auto-aligned
            - algorithm-back-translated
            - phone-recorded-audio
            - crowd-sourced-audio
    AudioFormat:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: audio format description
          enum:
          - WAV
          - PCM
          - MP3
    AudioChannel:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: number of channel in the audio
          enum:
          - mono
          - stero
    AudioSampleRate:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: sample rate of the audio file
          enum:
          - 44KHZ
          - 22KHZ
          - 8KHZ
    AudioBitsPerSample:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: number of bits per sample
          enum:
          - SIXTEEN
          - EIGHT
    BoundingBox:
      type: object
      properties:
        vertices:
          minLength: 4
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
      description: array of vertex with clockwise coordinate arrangement
    Vertex:
      type: object
      properties:
        x:
          type: number
          description: x-coordinate
        y:
          type: number
          description: y-coordinate
    DocumentOCRDatasetType:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: various option of ocr type
          enum:
          - LAYOUT
          - OCR
          - CHARACTER
    ImageFormat:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: image format description
          enum:
          - JPEG
          - BMP
          - PNG
    ImageDataType:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: textual data present in the image file
          enum:
          - SCENE_TEXT
          - TYPE_WRITER_TYPED
          - COMPUTER_TYPED
          - HANDWRITTEN
    ImageDPI:
      type: object
      properties:
        type:
          type: string
          enum:
          - PARAMS
        value:
          type: string
          description: allowed dpi
          enum:
          - 300_DPI
          - 72_DPI
    ErrorCode:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          description: status code
          enum:
          - null
          - null
          - null
          - null
          - null
        message:
          type: string
          description: human understandable format
    HttpResponse:
      type: object
      properties:
        ok:
          type: boolean
          description: request successful indicator.
        why:
          type: string
          description: Response message.
        status:
          $ref: '#/components/schemas/ErrorCode'
        data:
          type: integer
          description: should be null object
          oneOf:
          - $ref: '#/components/schemas/DatasetSearchResponse'
          - $ref: '#/components/schemas/DatasetSubmitResponse'
  securitySchemes:
    authToken:
      type: apiKey
      description: token issued by authenticating the user
      name: auth-token
      in: header
